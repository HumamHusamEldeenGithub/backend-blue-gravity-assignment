{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getSwaggerJson",
        "summary": "Get swagger file",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_getUsers",
        "summary": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The found records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_getById",
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "UsersController_deleteUser",
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted"
          }
        }
      }
    },
    "/users/by-info/email": {
      "get": {
        "operationId": "UsersController_getByEmail",
        "summary": "Get user by email",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "description": "User email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "summary": "Sign up with email and password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "AuthController_signin",
        "summary": "Sign in with email and password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed in succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contents": {
      "post": {
        "operationId": "ContentsController_createContent",
        "summary": "Create new content",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Content successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "ContentsController_getAll",
        "summary": "Get all contents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The found contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "operationId": "ContentsController_getOneById",
        "summary": "Get a content by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ContentsController_updateContent",
        "summary": "Update a content",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ContentsController_deleteContent",
        "summary": "Delete a content",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content successfully deleted"
          }
        }
      }
    },
    "/contents/category/{category}": {
      "get": {
        "operationId": "ContentsController_getAllByCategory",
        "summary": "Get contents by category",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "path",
            "description": "Content category",
            "schema": {
              "enum": [
                "game",
                "video",
                "artwork",
                "music"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contents/title/{title}": {
      "get": {
        "operationId": "ContentsController_getAllByTitle",
        "summary": "Get contents by title",
        "parameters": [
          {
            "name": "title",
            "required": true,
            "in": "path",
            "description": "Content title",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "operationId": "RatingsController_createRating",
        "summary": "Create new rating",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRatingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "RatingsController_getAllRatings",
        "summary": "Get all ratings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The found ratings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings/user/{id}": {
      "get": {
        "operationId": "RatingsController_getAllRatingsByUserId",
        "summary": "Get all ratings belong to a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found ratings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings/content/{id}": {
      "get": {
        "operationId": "RatingsController_getAllRatingsByContentId",
        "summary": "Get all ratings belong to a content",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found ratings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatingDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Blue Gravity Assignment API",
    "description": "API description for Blue Gravity Assignment",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "stars": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "content": {
            "$ref": "#/components/schemas/Content"
          }
        },
        "required": [
          "id",
          "stars",
          "user",
          "content"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            }
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "contents",
          "ratings"
        ]
      },
      "Content": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "contentUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            }
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "category",
          "thumbnailUrl",
          "contentUrl",
          "createdAt",
          "user",
          "ratings"
        ]
      },
      "SignupDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "SigninDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateContentDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "example": "Category of the content ( game - video - artwork - music )"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "contentUrl": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "category",
          "thumbnailUrl",
          "contentUrl"
        ]
      },
      "RatingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "stars": {
            "type": "number"
          },
          "contentId": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "stars",
          "contentId",
          "userId"
        ]
      },
      "ContentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "contentUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "authorId": {
            "type": "number"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatingDto"
            }
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "category",
          "thumbnailUrl",
          "contentUrl",
          "createdAt",
          "authorId",
          "ratings"
        ]
      },
      "UpdateContentDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "contentUrl": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "category",
          "thumbnailUrl",
          "contentUrl"
        ]
      },
      "CreateRatingDto": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          }
        },
        "required": [
          "contentId",
          "rating"
        ]
      }
    }
  }
}